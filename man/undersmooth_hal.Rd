% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/undersmooth_hal.R
\name{undersmooth_hal}
\alias{undersmooth_hal}
\title{fit undersoomthed HAL function with global criterion}
\usage{
undersmooth_hal(
  X,
  Y,
  fit_init,
  Nlam = 20,
  family = c("gaussian", "binomial", "poisson", "cox")
)
}
\arguments{
\item{X}{An input \code{matrix} with dimensions number of observations -by-
number of covariates that will be used to derive the design matrix of basis
functions.}

\item{Y}{A \code{numeric} vector of observations of the outcome variable.}

\item{fit_init}{The initial HAL fit object from the output list of \code{undersmooth_init}.}

\item{Nlam}{Number of lambda candidates. The sequence ranges from \code{fit_init$lambda_star} to
\code{fit_init$lambda_star*10^(-3)}.}

\item{family}{A \code{character} or a \code{\link[stats]{family}} object
(supported by \code{\link[glmnet]{glmnet}}) specifying the error/link
family for a generalized linear model. See more details in \code{fit_hal}.}
}
\description{
fit undersoomthed HAL function with global criterion
}
\details{
The procedure select the lambda that satisfies the global 
undersmoothing criterion (\eqn{ P_n(\phi_{s,i}(Y-\bar{Q}_{n,\lambda}))\leq \freq{\sigma_n}{\sqrt{n}log(n)} }).
It performs the following steps:
    1). get all the basis functions from cv-hal 
    2). calculate a grid of new lambdas by scaling the cv-lambda from
         cv-hal with seq(from=0, to=-3, length=Nlam)
    3). refit lasso using \code{\link[glmnet]{glmnet}}) with all the basis 
        functions and with the grid of new lambdas
    4).calculate the scores (\eqn{ P_n(\phi_{s,i}(Y-\bar{Q}_{n,\lambda})) })of each lasso fit     
    5).find the biggest lambda that max score (\eqn{ \leq \freq{\sigma_n}{\sqrt{n}log(n)} })
}
