[{"path":"/articles/halDRC-demo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"document demonstrates use HAL-based plugin estimator estimate marginal causal dose-response curve simulated real data settings. estimator uses Highly Adaptive Lasso (HAL) optional undersmoothing flexibly model conditional outcome, enabling valid inference marginal intervention contrasts. provide two simulated examples one real data example: - binary outcome setting - continuous outcome setting - real-data application using RHC study data","code":""},{"path":"/articles/halDRC-demo.html","id":"simulated-data-examples","dir":"Articles","previous_headings":"","what":"2. Simulated Data Examples","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"section, simulate hypothetical datasets validate HAL-based dose-response estimator. examples serve : - illustrate mechanics generating potential outcomes continuous interventions, - evaluate estimator performance known data-generating mechanisms, - visualize agreement estimated true dose-response curves.","code":""},{"path":"/articles/halDRC-demo.html","id":"binary-outcome-example","dir":"Articles","previous_headings":"2. Simulated Data Examples","what":"2.1 Binary Outcome Example","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"example simulates binary outcome YY, influenced continuous treatment AA baseline confounder WW. goal estimate causal effect curve ùîº[Y|(=)]\\mathbb{E}[Y | (= )] using plugin estimator HAL binomial outcome model. simulate data : - WW baseline confounder - AA continuous treatment - YY binary outcome depending AA WW","code":""},{"path":"/articles/halDRC-demo.html","id":"generate-simulated-data","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.1 Binary Outcome Example","what":"2.1.1 Generate Simulated Data","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"set.seed(145)  generate_data <- function(n, a = NA){   U_W <- rnorm(n)   U_A <- rnorm(n, sd = 2)   U_Y <- runif(n)   W <- U_W    if (is.na(a)) {     A <- 2 - 0.5 * W + U_A     A <- pmin(pmax(A, 0), 5)   } else {     A <- rep(a, n)   }    Y <- as.numeric(U_Y < plogis(-3 + 0.5*W + 1.25*A - 0.5*W*A))   data.frame(W, A, Y) }  obs <- generate_data(n = 500) head(obs) ##           W         A Y ## 1 0.6869129 3.7840125 0 ## 2 1.0663631 3.2232627 1 ## 3 0.5367006 0.5392545 1 ## 4 1.9060287 3.4649305 0 ## 5 1.0631596 0.0000000 0 ## 6 1.3703436 0.8576644 0"},{"path":"/articles/halDRC-demo.html","id":"estimate-dose-response-curve","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.1 Binary Outcome Example","what":"2.1.2 Estimate Dose-Response Curve","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"DRC_fit_UAdaptive <- fit_UHAL_DRC(dat = obs, y_var_name = \"Y\", trt_var_name = \"A\", family = \"binomial\")"},{"path":"/articles/halDRC-demo.html","id":"visualize-estimated-curve","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.1 Binary Outcome Example","what":"2.1.3 Visualize Estimated Curve","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"df_ests <- DRC_fit_UAdaptive$curve_est  ggplot(df_ests, aes(x = a, y = y_hat)) +   geom_line() +   geom_point() +   geom_ribbon(aes(ymin = ci_lwr, ymax = ci_upr), alpha = 0.3) +   labs(title = \"Estimated Dose-Response (Binary Outcome)\",        x = \"Treatment (A)\",        y = \"E[Y | do(A = a)]\") +   theme_bw()"},{"path":"/articles/halDRC-demo.html","id":"compare-to-true-curve","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.1 Binary Outcome Example","what":"2.1.4 Compare to True Curve","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"a.vals <- seq(0, 5, length.out = 20) psi0_a <- sapply(a.vals, function(a) mean(generate_data(n = 1e6, a = a)$Y)) psi0 <- data.frame(a = a.vals, psi0 = psi0_a)  ggplot(df_ests, aes(x = a, y = y_hat)) +   geom_line() +   geom_ribbon(aes(ymin = ci_lwr, ymax = ci_upr), alpha = 0.3) +   geom_point(data = psi0, aes(x = a, y = psi0), color = \"red\") +   geom_line(data = psi0, aes(x = a, y = psi0), color = \"red\") +   labs(title = \"Estimated vs. True Dose-Response (Binary Y)\",        y = \"E[Y | do(A = a)]\") +   theme_bw()"},{"path":"/articles/halDRC-demo.html","id":"continuous-outcome-example","dir":"Articles","previous_headings":"2. Simulated Data Examples","what":"2.2 Continuous Outcome Example","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"simulation example uses continuous outcome YY, nonlinear function treatment AA baseline covariate WW. showcases HAL handles nonlinear functional relationships continuous outcomes. compare estimated dose-response curve true curve obtained Monte Carlo integration.","code":""},{"path":"/articles/halDRC-demo.html","id":"simulate-continuous-outcome-data","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.2 Continuous Outcome Example","what":"2.2.1 Simulate Continuous Outcome Data","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"generate_data_2 <- function(n, a = NA) {   U_W <- rnorm(n)   U_A <- rnorm(n, sd = 0.8)   U_Y <- rnorm(n, sd = 0.5)    W <- U_W   A <- if (is.na(a)) 0.5 * W + U_A else rep(a, n)   logit_Y <- 0.5 * A^2 + A + 0.3 * W + U_Y   Y <- 1 / (1 + exp(-logit_Y))   data.frame(W, A, Y) }  obs <- generate_data_2(n = 500)"},{"path":"/articles/halDRC-demo.html","id":"visualize-data","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.2 Continuous Outcome Example","what":"2.2.2 Visualize Data","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"par(mfrow = c(1, 2)) plot(obs$W, obs$A, main = \"W vs A\", pch = 19, col = rgb(0, 0, 1, 0.4)) plot(obs$A, obs$Y, main = \"A vs Y\", pch = 19, col = rgb(1, 0, 0, 0.4))"},{"path":"/articles/halDRC-demo.html","id":"estimate-and-plot-dose-response-curve","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.2 Continuous Outcome Example","what":"2.2.3 Estimate and Plot Dose-Response Curve","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"DRC_fit_UAdaptive <- fit_UHAL_DRC(obs, \"Y\", \"A\", \"gaussian\") df_ests <- DRC_fit_UAdaptive$curve_est  ggplot(df_ests, aes(x = a, y = y_hat)) +   geom_line() +   geom_point() +   geom_ribbon(aes(ymin = ci_lwr, ymax = ci_upr), alpha = 0.3) +   labs(title = \"Estimated Dose-Response (Continuous Outcome)\",        x = \"Treatment (A)\",        y = \"E[Y | do(A = a)]\") +   theme_bw()"},{"path":"/articles/halDRC-demo.html","id":"compare-to-true-curve-1","dir":"Articles","previous_headings":"2. Simulated Data Examples > 2.2 Continuous Outcome Example","what":"2.2.4 Compare to True Curve","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"","code":"a.vals <- seq(min(obs$A), max(obs$A), length.out = 100) psi0 <- data.frame(   a = a.vals,   psi0 = sapply(a.vals, function(a) mean(generate_data_2(n = 1e6, a = a)$Y)) )  ggplot(df_ests, aes(x = a, y = y_hat)) +   geom_line() +   geom_ribbon(aes(ymin = ci_lwr, ymax = ci_upr), alpha = 0.3) +   geom_line(data = psi0, aes(x = a, y = psi0), color = \"red\") +   labs(title = \"Estimated vs. True Dose-Response (Continuous Y)\",        y = \"E[Y | do(A = a)]\") +   theme_bw()"},{"path":"/articles/halDRC-demo.html","id":"real-data-example-rhc-study","dir":"Articles","previous_headings":"","what":"3. Real Data Example: RHC Study","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"now apply HAL-based dose-response estimation procedure real observational data Right Heart Catheterization (RHC) study. data set includes detailed clinical variables treatments administered critically ill patients. goal estimate marginal causal effect treatment intensity (proxied synthetic ‚ÄúProcedureCount‚Äù variable) hospital length stay, adjusting baseline severity biomarkers.","code":""},{"path":"/articles/halDRC-demo.html","id":"load-and-prepare-rhc-data","dir":"Articles","previous_headings":"3. Real Data Example: RHC Study","what":"3.1 Load and Prepare RHC Data","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"section, load raw RHC dataset, construct outcome variable (length hospital stay), define treatment (number procedures), select relevant clinical confounders. also perform data cleaning variable formatting prepare dataset analysis.","code":"# Load raw dataset ObsData <- read.csv(\"https://hbiostat.org/data/repo/rhc.csv\", header = TRUE)  # Create outcome Y: length of stay ObsData$Y <- ObsData$dschdte - ObsData$sadmdte ObsData$Y[is.na(ObsData$Y)] <- ObsData$dthdte[is.na(ObsData$Y)] - ObsData$sadmdte[is.na(ObsData$Y)]  # Add synthetic ProcedureCount (used as A) set.seed(145) ObsData$ProcedureCount <- round(runif(nrow(ObsData), min = 0, max = 10), 0)  # Rename variables needed for analysis ObsData <- ObsData %>%   dplyr::rename(     APACHE.score = aps1,     DASIndex = das2d3pc,     Creatinine = crea1,     Bilirubin = bili1,     WBC = wblc1,     Heart.rate = hrt1   )  # Subset to required columns for analysis analysis_df <- ObsData %>%   dplyr::select(     Y,     A = ProcedureCount,     APACHE.score,     DASIndex,     Creatinine,     Bilirubin,     WBC,     Heart.rate   ) %>%   na.omit()  # ‚ÑπÔ∏è For computational efficiency in this demo, we randomly selected 1,000 observations from the full cleaned dataset for this HAL analysis. set.seed(2025) analysis_df <- analysis_df %>% sample_n(1000)  head(analysis_df) ##    Y A APACHE.score DASIndex Creatinine Bilirubin      WBC Heart.rate ## 1 21 6           66 17.04297   7.799805 0.5999756 31.39844        132 ## 2 17 7           78 17.04297   2.500000 0.3999634 19.00000         28 ## 3 21 1           76 14.75195   3.899902 0.1999817 14.00000        150 ## 4  6 7           39 15.40625   1.199951 1.0097656 13.39844        115 ## 5 19 5           63 24.00000   1.199951 1.1999512 14.00000        130 ## 6  5 6           66 14.00000   1.899902 0.3999634 10.59961        167"},{"path":"/articles/halDRC-demo.html","id":"fit-and-plot-hal-dose-response-curve","dir":"Articles","previous_headings":"3. Real Data Example: RHC Study","what":"3.2 Fit and Plot HAL Dose-Response Curve","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":", apply fit_UHAL_DRC() function real data visualize estimated marginal dose-response curve. helps assess treatment intensity associated patient outcomes adjusting confounding.","code":"DRC_fit_UAdaptive <- fit_UHAL_DRC(dat = analysis_df, y_var_name = \"Y\", trt_var_name = \"A\", family = \"gaussian\") df_ests <- DRC_fit_UAdaptive$curve_est  head(df_ests) ##           a    y_hat       SE   ci_lwr   ci_upr ## 1 0.0000000 22.35758 4.859680 12.83261 31.88256 ## 2 0.5263158 20.36055 2.382419 15.69101 25.03009 ## 3 1.0526316 18.65867 1.870346 14.99279 22.32455 ## 4 1.5789474 19.61320 1.562635 16.55043 22.67596 ## 5 2.1052632 20.67491 2.042769 16.67108 24.67873 ## 6 2.6315789 22.16536 2.017330 18.21139 26.11932 ggplot(df_ests, aes(x = a, y = y_hat)) +   geom_line() +   geom_point() +   geom_ribbon(aes(ymin = ci_lwr, ymax = ci_upr), alpha = 0.3) +   labs(     title = \"Estimated Marginal Dose-Response Curve\",     x = \"Number of Procedures (A)\",     y = \"Expected Length of Stay (Y)\"   ) +   theme_bw()"},{"path":"/articles/halDRC-demo.html","id":"summary","dir":"Articles","previous_headings":"","what":"4. Summary","title":"Dose-Response Estimation with HAL: Simulated and Real Data","text":"unified demonstration shows apply HAL-based plugin estimator estimate causal dose-response curves simulated real-world observational data. method enables flexible functional modeling valid inference, clear application diverse outcomes settings.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Junming Shi. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shi J (2025). halDRC: HAL-based Plugin Estimation Causal Dose-Response Curve. R package version 0.1.0, https://arxiv.org/abs/2406.05607.","code":"@Manual{,   title = {halDRC: HAL-based Plugin Estimation of the Causal Dose-Response Curve},   author = {Junming Shi},   year = {2025},   note = {R package version 0.1.0},   url = {https://arxiv.org/abs/2406.05607}, }"},{"path":"/index.html","id":"haldrc-","dir":"","previous_headings":"","what":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"Highly Adaptive Lasso-Based Estimation Causal Dose-Response Curves halDRC R package estimating causal marginal dose-response relationships using Highly Adaptive Lasso (HAL). supports binary continuous outcomes, optional undersmoothing smoothness-order adaptation. package provides plugin estimator interpretable flexible, suitable simulation studies real-world observational data.","code":""},{"path":"/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"üì¶ Installation","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"install development version GitHub: clone install locally: install dependencies: hal9001 sl3","code":"# Install the devtools package if you haven't already install.packages(\"devtools\")  # Install halDRC devtools::install_github(\"SeraphinaShi/halDRC\", build_vignettes = TRUE) git clone https://github.com/SeraphinaShi/halDRC.git setwd(\"halDRC\") devtools::install(build_vignettes = TRUE) install.packages(\"hal9001\") devtools::install_github(\"tlverse/sl3\")"},{"path":"/index.html","id":"id_-quick-start","dir":"","previous_headings":"","what":"üöÄ Quick Start","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"","code":"library(halDRC)  # Simulate data set.seed(123)  simulate_dose_response <- function(n, a = NA) {   W <- rnorm(500)   A <- if (is.na(a)) 0.5 * W + rnorm(n, sd = 0.8) else rep(a, n)   logit_Y <- 0.5 * A^2 + A + 0.3 * W + rnorm(n, sd = 0.5)   Y <- 1 / (1 + exp(-logit_Y))    data.frame(W, A, Y) } data <- simulate_dose_response(n = 100)   # Replace with your generator   # Fit dose-response using HAL library(dplyr) fit <- fit_UHAL_DRC(   dat = data,   y_var_name = \"Y\",   trt_var_name = \"A\",   family = \"gaussian\" )  # Plot results library(ggplot2) ggplot(fit$curve_est, aes(x = a, y = y_hat)) +   geom_line() +   geom_ribbon(aes(ymin = ci_lwr, ymax = ci_upr), alpha = 0.3) +   theme_minimal() +   labs(title = \"Estimated Dose-Response Curve\", x = \"Treatment (A)\", y = \"Outcome (Y)\")"},{"path":"/index.html","id":"id_-vignette-example-real-rhc-dataset","dir":"","previous_headings":"","what":"üìò Vignette Example: Real RHC Dataset","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"provide full demo using RHC (Right Heart Catheterization) dataset TMLE workshop.","code":""},{"path":"/index.html","id":"id_-view-the-vignette","dir":"","previous_headings":"üìò Vignette Example: Real RHC Dataset","what":"üîç View the Vignette","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"view online vignette . vignette demonstrates full analysis pipeline using real data: - Loading preprocessing RHC dataset - Choosing treatment confounder variables - Fitting HAL plugin estimator - Visualizing estimated dose-response curve","code":"# After installation browseVignettes(\"halDRC\") # Then click 'halDRC-demo' to view the full analysis"},{"path":"/index.html","id":"id_-included-functions","dir":"","previous_headings":"","what":"üìÇ Included Functions","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"fit_UHAL_DRC() ‚Äì Estimate dose-response curve using HAL","code":""},{"path":"/index.html","id":"id_-references","dir":"","previous_headings":"","what":"üìö References","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"Shi, Junming, et al.¬†‚ÄúHal-based plugin estimation causal dose-response curve.‚Äù arXiv preprint arXiv:2406.05607 (2024).","code":""},{"path":"/index.html","id":"id_-development","dir":"","previous_headings":"","what":"üß™ Development","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"want contribute, feel free submit issue pull request!","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"HAL-based Plugin Estimation of the Causal Dose-Response Curve","text":"MIT ¬© Junming Shi","code":""},{"path":"/reference/IC_based_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the influence curve based SE with given fitted HAL object and evaluation points ‚Äî IC_based_se","title":"Calculate the influence curve based SE with given fitted HAL object and evaluation points ‚Äî IC_based_se","text":"Calculate influence curve based SE given fitted HAL object evaluation points","code":""},{"path":"/reference/IC_based_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the influence curve based SE with given fitted HAL object and evaluation points ‚Äî IC_based_se","text":"","code":"IC_based_se(   X,   Y,   hal_fit,   eval_points,   family = \"binomial\",   X_unpenalized = NULL )"},{"path":"/reference/IC_based_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the influence curve based SE with given fitted HAL object and evaluation points ‚Äî IC_based_se","text":"X input matrix dimensions number observations -- number covariates used derive design matrix basis functions. Y numeric vector observations outcome variable. hal_fit HAL fit object. family character family object (supported glmnet) specifying error/link family generalized linear model. See details fit_hal. X_unpenalized TAn input matrix dimensions number observations -- number covariates penalized fit HAL.","code":""},{"path":"/reference/IC_based_se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the influence curve based SE with given fitted HAL object and evaluation points ‚Äî IC_based_se","text":"procedure calculates SE following steps:     1). get selected basis functions corresponding hal_fit     2). calculate influence curves coefficients     3). use delta method calculate influence curves points curve","code":""},{"path":"/reference/fit_UHAL_DRC.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit HAL and Estimate the Dose-Response Curve with Confidence Intervals ‚Äî fit_UHAL_DRC","title":"Fit HAL and Estimate the Dose-Response Curve with Confidence Intervals ‚Äî fit_UHAL_DRC","text":"function fits undersmoothed Highly Adaptive Lasso (HAL) model input data using specified fitting hyperparameters. leverages fitted HAL model estimate dose-response curve across specified treatment levels, optionally returning confidence intervals via delta method.","code":""},{"path":"/reference/fit_UHAL_DRC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit HAL and Estimate the Dose-Response Curve with Confidence Intervals ‚Äî fit_UHAL_DRC","text":"","code":"fit_UHAL_DRC(   dat,   y_var_name,   trt_var_name,   family,   curvePoints = NULL,   Unsersmoothing = TRUE,   smoothOrderAdapt = FALSE,   smoothOrder = 1,   baseNumKnots = NA,   boundResults = TRUE )"},{"path":"/reference/fit_UHAL_DRC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit HAL and Estimate the Dose-Response Curve with Confidence Intervals ‚Äî fit_UHAL_DRC","text":"y_var_name character string specifying column name outcome variable data. trt_var_name character string specifying column name treatment (exposure) variable data. family character string family object indicating error distribution link function used model. Must compatible HAL fitting procedure. curvePoints numeric vector containing treatment values dose-response curve evaluated. smoothOrderAdapt logical flag. TRUE, function attempt data-adaptively choose smoothness order number knots. smoothOrder numeric value specifying smoothness order HAL basis functions (used smoothOrderAdapt = FALSE). baseNumKnots numeric value indicating base number knots use HAL fitting (used smoothOrderAdapt = FALSE). boundResults logical flag. TRUE, function constrain predicted dose-response estimates confidence intervals fall within observed range outcome variable. data data.frame containing observations. Must include relevant covariates, treatment variable, outcome variable.","code":""},{"path":"/reference/fit_UHAL_DRC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit HAL and Estimate the Dose-Response Curve with Confidence Intervals ‚Äî fit_UHAL_DRC","text":"list data.frame (depending implementation) containing: predicted dose-response curve evaluated curvePoints. Optional confidence intervals point curve. Possibly diagnostic metadata components used HAL fitting.","code":""},{"path":"/reference/fit_UHAL_DRC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit HAL and Estimate the Dose-Response Curve with Confidence Intervals ‚Äî fit_UHAL_DRC","text":"core steps include: 1. Fitting HAL model using outcome covariates, excluding treatment. 2. Predicting counterfactual outcomes observation across range    treatment values supplied `curvePoints`. 3. Estimating average potential outcome treatment level construct    dose-response curve. 4. Optionally computing delta-method-based confidence intervals estimated    means. 5. Optionally bounding predicted means confidence intervals within    observed outcome range interpretability robustness. function allows flexible control HAL fitting behavior, including options data-adaptive smoothing manually setting smoothness order number knots. particularly useful causal inference personalized medicine settings estimating treatment effect heterogeneity interest.","code":""},{"path":"/reference/get_maxscore.html","id":null,"dir":"Reference","previous_headings":"","what":"undersoomthed HAL helper function for global criterion ‚Äî get_maxscore","title":"undersoomthed HAL helper function for global criterion ‚Äî get_maxscore","text":"undersoomthed HAL helper function global criterion","code":""},{"path":"/reference/get_maxscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undersoomthed HAL helper function for global criterion ‚Äî get_maxscore","text":"","code":"get_maxscore(basis_mat, resid_mat, sd_est, Nlam, us_fit)"},{"path":"/reference/get_maxscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undersoomthed HAL helper function for global criterion ‚Äî get_maxscore","text":"basis_mat selected basis matrix initial fit undersmoothing, obtained output list undersmooth_init. resid_mat residual matrix column residuals correspongding lambda. sd_est numeric vector containing sd column basis_mat. Nlam Number lambda candidates. us_fit glmnet fit sequence candidate lambdas.","code":""},{"path":"/reference/get_maxscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"undersoomthed HAL helper function for global criterion ‚Äî get_maxscore","text":"candidate lambda, :     1). standardize score formed basis.     2). calculate mean standardized scores basis. Select max mean.","code":""},{"path":"/reference/undersmooth_hal.html","id":null,"dir":"Reference","previous_headings":"","what":"fit undersoomthed HAL function with global criterion ‚Äî undersmooth_hal","title":"fit undersoomthed HAL function with global criterion ‚Äî undersmooth_hal","text":"fit undersoomthed HAL function global criterion","code":""},{"path":"/reference/undersmooth_hal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit undersoomthed HAL function with global criterion ‚Äî undersmooth_hal","text":"","code":"undersmooth_hal(   X,   Y,   fit_init,   Nlam = 20,   family = c(\"gaussian\", \"binomial\", \"poisson\", \"cox\") )"},{"path":"/reference/undersmooth_hal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit undersoomthed HAL function with global criterion ‚Äî undersmooth_hal","text":"X input matrix dimensions number observations -- number covariates used derive design matrix basis functions. Y numeric vector observations outcome variable. fit_init initial HAL fit object output list undersmooth_init. Nlam Number lambda candidates. sequence ranges fit_init$lambda_star fit_init$lambda_star*10^(-3). family character family object (supported glmnet) specifying error/link family generalized linear model. See details fit_hal.","code":""},{"path":"/reference/undersmooth_hal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit undersoomthed HAL function with global criterion ‚Äî undersmooth_hal","text":"procedure select lambda satisfies global undersmoothing criterion (\\( P_n(\\phi_{s,}(Y-\\bar{Q}_{n,\\lambda}))\\leq \\freq{\\sigma_n}{\\sqrt{n}log(n)} \\)). performs following steps:     1). get basis functions cv-hal     2). calculate grid new lambdas scaling cv-lambda          cv-hal seq(=0, =-3, length=Nlam)     3). refit lasso using glmnet) basis         functions grid new lambdas     4).calculate scores (\\( P_n(\\phi_{s,}(Y-\\bar{Q}_{n,\\lambda})) \\))lasso fit     5).find biggest lambda max score (\\( \\leq \\freq{\\sigma_n}{\\sqrt{n}log(n)} \\))","code":""}]
